### DB Build
FROM postgres:15.6-alpine AS db-build
COPY docker/dev-dbs-init.sh /docker-entrypoint-initdb.d/

### App Build
FROM python:3.12-slim-bookworm AS app-build

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV VIRTUAL_ENV=/usr/local

# install psycopg2 dependencies.
RUN apt-get update && apt-get install -y \
    libpq-dev \
    redis-tools \
    postgresql-client \
    gcc \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /code

WORKDIR /code

RUN pip install poetry
COPY pyproject.toml poetry.lock /code/
RUN poetry config virtualenvs.in-project false
RUN poetry config virtualenvs.create false
RUN poetry config virtualenvs.path /usr/local

# Install all dependencies including dev and test for development environment
RUN poetry install --only main,dev,test --no-root --no-interaction
COPY . /code
RUN poetry install --only main,dev,test --no-interaction

EXPOSE 8000

# Use Django development server for local development
CMD ["poetry", "run", "python", "manage.py", "runserver", "0.0.0.0:8000"]
