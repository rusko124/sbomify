# Generated by Django 5.2.3 on 2025-07-23 11:04

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0011_add_performance_indexes"),
        ("sboms", "0035_migrate_component_metadata_to_native_fields"),
        ("teams", "0014_update_team_keys"),
    ]

    operations = [
        migrations.CreateModel(
            name="DependencyTrackServer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Friendly name for this DT server", max_length=255
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Base URL of the Dependency Track server",
                        max_length=500,
                        unique=True,
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        help_text="API key for authentication", max_length=255
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this server is available for use",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=100,
                        help_text="Lower numbers = higher priority for load balancing",
                    ),
                ),
                (
                    "max_concurrent_scans",
                    models.IntegerField(
                        default=10, help_text="Maximum concurrent SBOM uploads/scans"
                    ),
                ),
                (
                    "current_scan_count",
                    models.IntegerField(
                        default=0, help_text="Current number of active scans"
                    ),
                ),
                ("last_health_check", models.DateTimeField(blank=True, null=True)),
                (
                    "health_status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("degraded", "Degraded"),
                            ("unhealthy", "Unhealthy"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "vulnerability_scanning_dt_servers",
                "ordering": ["priority", "name"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "priority"],
                        name="vulnerabili_is_acti_c72e5a_idx",
                    ),
                    models.Index(fields=["url"], name="vulnerabili_url_8c1e91_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ComponentDependencyTrackMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "dt_project_uuid",
                    models.UUIDField(
                        help_text="UUID of the project in Dependency Track"
                    ),
                ),
                (
                    "dt_project_name",
                    models.CharField(
                        help_text="Name of the project in DT", max_length=255
                    ),
                ),
                ("last_sbom_upload", models.DateTimeField(blank=True, null=True)),
                (
                    "last_scan_result",
                    models.JSONField(
                        blank=True, help_text="Cached scan results", null=True
                    ),
                ),
                ("last_metrics_sync", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "component",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dependency_track_mappings",
                        to="core.component",
                    ),
                ),
                (
                    "dt_server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="component_mappings",
                        to="vulnerability_scanning.dependencytrackserver",
                    ),
                ),
            ],
            options={
                "db_table": "vulnerability_scanning_component_mappings",
            },
        ),
        migrations.CreateModel(
            name="TeamVulnerabilitySettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vulnerability_provider",
                    models.CharField(
                        choices=[
                            ("osv", "OSV (Google Open Source Vulnerabilities)"),
                            ("dependency_track", "Dependency Track"),
                        ],
                        default="osv",
                        help_text="Choose between OSV and Dependency Track for vulnerability scanning",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "custom_dt_server",
                    models.ForeignKey(
                        blank=True,
                        help_text="Custom Dependency Track server (Enterprise only). Business plans use the shared server pool.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teams_using_custom",
                        to="vulnerability_scanning.dependencytrackserver",
                    ),
                ),
                (
                    "team",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vulnerability_settings",
                        to="teams.team",
                    ),
                ),
            ],
            options={
                "db_table": "vulnerability_scanning_team_settings",
            },
        ),
        migrations.CreateModel(
            name="VulnerabilityScanResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("osv", "OSV Scanner"),
                            ("dependency_track", "Dependency Track"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "scan_trigger",
                    models.CharField(
                        choices=[
                            ("upload", "SBOM Upload"),
                            ("manual", "Manual Trigger"),
                            ("weekly", "Weekly Batch"),
                            ("api", "API Request"),
                        ],
                        default="upload",
                        help_text="What triggered this scan",
                        max_length=20,
                    ),
                ),
                (
                    "vulnerability_count",
                    models.JSONField(
                        help_text="Vulnerability counts by severity: {total, critical, high, medium, low, info, unknown}"
                    ),
                ),
                (
                    "findings",
                    models.JSONField(
                        help_text="Standardized vulnerability findings list - direct array format for both providers"
                    ),
                ),
                (
                    "scan_metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Provider-specific metadata (DT metrics, OSV summary, etc.)",
                    ),
                ),
                (
                    "total_vulnerabilities",
                    models.IntegerField(
                        default=0, help_text="Total vulnerability count"
                    ),
                ),
                (
                    "critical_vulnerabilities",
                    models.IntegerField(
                        default=0, help_text="Critical vulnerability count"
                    ),
                ),
                (
                    "high_vulnerabilities",
                    models.IntegerField(
                        default=0, help_text="High vulnerability count"
                    ),
                ),
                (
                    "medium_vulnerabilities",
                    models.IntegerField(
                        default=0, help_text="Medium vulnerability count"
                    ),
                ),
                (
                    "low_vulnerabilities",
                    models.IntegerField(default=0, help_text="Low vulnerability count"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "component_mapping",
                    models.ForeignKey(
                        blank=True,
                        help_text="Only applicable for Dependency Track scans",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scan_results",
                        to="vulnerability_scanning.componentdependencytrackmapping",
                    ),
                ),
                (
                    "sbom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vulnerability_scan_results",
                        to="sboms.sbom",
                    ),
                ),
            ],
            options={
                "db_table": "vulnerability_scanning_scan_results",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="componentdependencytrackmapping",
            index=models.Index(
                fields=["component"], name="vulnerabili_compone_0ef4eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="componentdependencytrackmapping",
            index=models.Index(
                fields=["dt_server", "dt_project_uuid"],
                name="vulnerabili_dt_serv_c0b8ef_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="componentdependencytrackmapping",
            unique_together={("component", "dt_server")},
        ),
        migrations.AddIndex(
            model_name="teamvulnerabilitysettings",
            index=models.Index(fields=["team"], name="vulnerabili_team_id_f9db7e_idx"),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["sbom", "provider", "created_at"],
                name="vulnerabili_sbom_id_accd2b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["component_mapping"], name="vulnerabili_compone_01a4b8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["sbom", "created_at"], name="vulnerabili_sbom_id_c02ac9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["provider", "created_at"], name="vulnerabili_provide_585a54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["scan_trigger", "created_at"],
                name="vulnerabili_scan_tr_83d05f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["total_vulnerabilities", "created_at"],
                name="vulnerabili_total_v_19bf62_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["critical_vulnerabilities", "created_at"],
                name="vulnerabili_critica_2ceae3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vulnerabilityscanresult",
            index=models.Index(
                fields=["sbom", "provider", "-created_at"],
                name="vulnerabili_sbom_id_013d28_idx",
            ),
        ),
    ]
